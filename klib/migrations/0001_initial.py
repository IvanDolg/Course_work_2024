# Generated by Django 2.2.12 on 2024-11-27 15:59

import datetime
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import klib.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseArrival',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('qty', models.PositiveIntegerField(default=1, null=True, verbose_name='Quantity')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Amount')),
                ('amount_with_vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Amount with vat')),
                ('amount_vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Vat amount')),
                ('invoice_number', models.CharField(max_length=64, null=True, verbose_name='Invoice number')),
                ('invoice_date', models.DateField(null=True, verbose_name='Invoice date')),
                ('double_number', models.BooleanField(default=False, verbose_name='Double number')),
                ('edition_number', models.PositiveIntegerField(null=True, verbose_name='Edition Number')),
                ('second_edition_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Second Edition Number')),
                ('library', models.CharField(blank=True, max_length=255, null=True, verbose_name='Library')),
                ('filing', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filing')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
            ],
            options={
                'verbose_name': 'Arrival',
                'verbose_name_plural': 'Arrivals',
            },
        ),
        migrations.CreateModel(
            name='BaseEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('edition_type', models.CharField(choices=[('PERIODICAL', 'Periodical'), ('NON_PERIODICAL', 'Non-periodical')], default='PERIODICAL', max_length=256, verbose_name='Edition type')),
                ('edition_subtype', models.CharField(choices=[('MAGAZINES', 'Magazines type name'), ('NEWSPAPERS', 'Newspapers type name'), ('BOOK', 'Book type name'), ('BROCHURE', 'Brochure type name'), ('STD', 'STD type name'), ('INFORMATION_FLYER', 'Information Flyer type name'), ('STD_CHANGES', 'STD changes type name'), ('E_RESOURCE', 'E-resource type name')], default='MAGAZINES', max_length=256, verbose_name='Edition subtype')),
                ('title', models.CharField(max_length=150, verbose_name='Edition title')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('year', models.CharField(max_length=4, validators=[klib.validators.validate_year], verbose_name='Year')),
                ('international_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='ISBN')),
                ('index', models.CharField(blank=True, max_length=30, null=True, verbose_name='Index')),
                ('document_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Doc number')),
                ('responsibility_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Responsibility info')),
                ('parallel_title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Parallel title')),
                ('designation', models.CharField(blank=True, max_length=40, null=True, verbose_name='Designation')),
                ('title_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title info')),
                ('part_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Part number')),
                ('part_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Part name')),
                ('author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Author')),
                ('place_of_publication', models.CharField(blank=True, max_length=100, null=True, verbose_name='Place of publication')),
                ('publisher', models.CharField(blank=True, max_length=40, null=True, verbose_name='Publisher')),
                ('series_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Series title')),
                ('edition_info', models.CharField(blank=True, max_length=40, null=True, verbose_name='Edition info')),
                ('volume', models.CharField(blank=True, max_length=15, null=True, verbose_name='Volume')),
                ('information_carrier', models.CharField(blank=True, max_length=15, null=True, verbose_name='Information carrier')),
            ],
            options={
                'verbose_name': 'Base edition',
                'verbose_name_plural': 'Base editions',
            },
        ),
        migrations.CreateModel(
            name='BaseFundElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=75, null=True, verbose_name='Library')),
                ('inventory_number', models.CharField(max_length=64, null=True, verbose_name='Inventory number')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Price')),
                ('price_with_vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Price with vat')),
                ('vat_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Vat amount')),
                ('registration_date', models.DateField(null=True, verbose_name='Invoice date')),
                ('invoice_number', models.CharField(max_length=64, null=True, verbose_name='Invoice number')),
                ('invoice_date', models.DateField(null=True, verbose_name='Invoice date')),
                ('publication_status', models.CharField(choices=[('WRITTEN_OFF', 'Исключен'), ('NOT_WRITTEN_OFF', 'В фонде'), ('IN_THE_DEPOSITORY_FUND', 'В депозитарном фонде'), ('REPLACEABLE', 'Замененное издание (неподтвержденное)'), ('REPLACING', 'Заменившее издание (неподтвержденное)')], default='NOT_WRITTEN_OFF', max_length=100, verbose_name='Order status')),
                ('is_booked', models.BooleanField(default=False, verbose_name='Is Booked')),
                ('subscription', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filing')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('arrival', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arrival_found', to='klib.BaseArrival', verbose_name='Arrival')),
                ('edition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='klib.BaseEdition', verbose_name='Edition')),
            ],
            options={
                'verbose_name': 'Fund element',
                'verbose_name_plural': 'Fund',
            },
        ),
        migrations.CreateModel(
            name='BaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('contract_number', models.CharField(blank=True, max_length=25, null=True, validators=[klib.validators.validate_contract_number], verbose_name='Contract number')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract date')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновой'), ('ACTIVE', 'Действующий'), ('PARTIALLY_CLOSED', 'Частично закрыт'), ('CLOSED', 'Закрыт')], default='ACTIVE', max_length=100, verbose_name='Order status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion date')),
                ('edition_type', models.CharField(choices=[('PERIODICAL', 'Periodical'), ('NON_PERIODICAL', 'Non-periodical')], max_length=16, verbose_name='Edition type')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantity')),
                ('payment_type', models.CharField(choices=[('CASH', 'Наличные'), ('ACCOUNT', 'Безналично'), ('INADVANCE', 'Предварительный'), ('GIFT', 'Дар'), ('PRICELESS', 'Бесплатно')], default='CASH', max_length=16, verbose_name='Payment type')),
                ('currency', models.CharField(choices=[('BYN', 'Рубль РБ'), ('RUB', 'Рубль РФ')], default='BYN', max_length=16, verbose_name='Currency')),
                ('duration_of_receipt', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration of receipt')),
                ('first_number', models.PositiveIntegerField(blank=True, null=True, validators=[klib.validators.validate_edition_number], verbose_name='First issue number')),
                ('last_number', models.PositiveIntegerField(blank=True, null=True, validators=[klib.validators.validate_edition_number], verbose_name='Last issue number')),
                ('number_of_copies', models.PositiveIntegerField(blank=True, null=True, validators=[klib.validators.validate_number_of_copies], verbose_name='Number of copies of one issue')),
                ('total_issue_numbers', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total number of issue numbers')),
                ('duration_of_storage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration of storage')),
                ('price_per_instance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price per instance')),
                ('vat_rate', models.PositiveIntegerField(blank=True, default=20, null=True, validators=[klib.validators.validate_vat_rate], verbose_name='Vat rate')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total price')),
                ('price_per_instance_no_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price per instance without VAT')),
                ('vat_per_instance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VAT per instance')),
                ('total_price_no_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total price without VAT')),
                ('total_price_with_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total price with VAT')),
                ('total_vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total VAT')),
                ('addition_agreement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Addition agreement')),
                ('agreement_date', models.DateField(blank=True, null=True, verbose_name='Agreement date')),
                ('subscription', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filing')),
                ('library', models.CharField(blank=True, max_length=255, null=True, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Заказ непериодики',
                'verbose_name_plural': 'Заказы непериодики',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('legal_form', models.CharField(choices=[('ООО', 'ООО'), ('ОАО', 'ОАО'), ('ИП', 'ИП'), ('УП', 'УП'), ('ЗАО', 'ЗАО'), ('ОДО', 'ОДО'), ('АО', 'АО'), ('ГО', 'ГО'), ('ГП', 'ГП'), ('ГУ', 'ГУ'), ('У', 'У'), ('УО', 'УО'), ('ЧУП', 'ЧУП'), ('ЧП', 'ЧП'), ('РУП', 'РУП'), ('Отсутствует', 'Отсутствует')], default='РБ', max_length=50, verbose_name='Legal form')),
                ('short_name', models.CharField(max_length=100, verbose_name='Short name')),
                ('official_name', models.CharField(max_length=150, verbose_name='Official name')),
                ('postal_code', models.CharField(max_length=6, verbose_name='Postal code')),
                ('country', models.CharField(choices=[('РБ', 'РБ'), ('РФ', 'РФ')], default='РБ', max_length=50, verbose_name='Country')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('taxpayer_number', models.CharField(max_length=15, unique=True, verbose_name='Taxpayer number')),
                ('phone_1', models.CharField(max_length=15, verbose_name='Phone')),
                ('phone_2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone 2')),
                ('email', models.CharField(blank=True, max_length=30, null=True, verbose_name='Email')),
                ('bank_name', models.CharField(max_length=40, validators=[klib.validators.validate_bank_name], verbose_name='Bank name')),
                ('bank_code', models.CharField(max_length=9, validators=[klib.validators.validate_bank_code], verbose_name='Bank code')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='DepositoryFundElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act_number', models.CharField(blank=True, max_length=20, verbose_name='Act number')),
                ('act_date', models.DateField(default=datetime.date.today, verbose_name='Act date')),
                ('basis_for_write_off', models.CharField(max_length=255, verbose_name='The basis of the write-off')),
                ('total_excluded', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total excluded from the fund')),
                ('socio_economic_count', models.PositiveIntegerField(default=0, verbose_name='Socio-economic')),
                ('technical_count', models.PositiveIntegerField(default=0, verbose_name='Technic')),
                ('other_count', models.PositiveIntegerField(default=0, verbose_name='Others')),
                ('railway_theme_count', models.PositiveIntegerField(default=0, verbose_name='On railway topics')),
                ('chairman', models.IntegerField(null=True, verbose_name='Chairman of the Commission')),
                ('vice_chairman', models.IntegerField(null=True, verbose_name='Deputy Chairman of the Commission')),
                ('member_1', models.IntegerField(null=True, verbose_name='Member of the Commission 1')),
                ('member_2', models.IntegerField(null=True, verbose_name='Member of the Commission 2')),
                ('member_3', models.IntegerField(null=True, verbose_name='Member of the Commission 3')),
                ('submitted_by', models.IntegerField(verbose_name='I handed over the written-off documents(a)')),
                ('registered_by', models.IntegerField(verbose_name='The act was carried out in the book of total accounting')),
                ('selected_elements_info', models.TextField(blank=True, null=True, verbose_name='Selected elements info')),
                ('inventory_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inventory number')),
            ],
            options={
                'verbose_name': 'Depository fund element',
                'verbose_name_plural': 'Depository fund element',
            },
        ),
        migrations.CreateModel(
            name='NonPeriodicalEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('edition_type', models.CharField(choices=[('PERIODICAL', 'Periodical'), ('NON_PERIODICAL', 'Non-periodical')], default='PERIODICAL', max_length=256, verbose_name='Edition type')),
                ('edition_subtype', models.CharField(choices=[('MAGAZINES', 'Magazines type name'), ('NEWSPAPERS', 'Newspapers type name'), ('BOOK', 'Book type name'), ('BROCHURE', 'Brochure type name'), ('STD', 'STD type name'), ('INFORMATION_FLYER', 'Information Flyer type name'), ('STD_CHANGES', 'STD changes type name'), ('E_RESOURCE', 'E-resource type name')], default='MAGAZINES', max_length=256, verbose_name='Edition subtype')),
                ('title', models.CharField(max_length=150, verbose_name='Edition title')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('international_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='ISBN')),
                ('index', models.CharField(blank=True, max_length=30, null=True, verbose_name='Index')),
                ('document_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Doc number')),
                ('responsibility_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Responsibility info')),
                ('parallel_title', models.CharField(blank=True, max_length=150, null=True, verbose_name='Parallel title')),
                ('designation', models.CharField(blank=True, max_length=40, null=True, verbose_name='Designation')),
                ('title_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title info')),
                ('part_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Part number')),
                ('part_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Part name')),
                ('author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Author')),
                ('place_of_publication', models.CharField(blank=True, max_length=100, null=True, verbose_name='Place of publication')),
                ('publisher', models.CharField(blank=True, max_length=40, null=True, verbose_name='Publisher')),
                ('date_of_publication', models.DateField(verbose_name='Date of publication')),
                ('series_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Series title')),
                ('edition_info', models.CharField(blank=True, max_length=40, null=True, verbose_name='Edition info')),
                ('volume', models.CharField(blank=True, max_length=15, null=True, verbose_name='Volume')),
                ('information_carrier', models.CharField(blank=True, max_length=15, null=True, verbose_name='Information carrier')),
            ],
            options={
                'verbose_name': 'Non-periodical edition',
                'verbose_name_plural': 'Non-periodical editions',
            },
        ),
        migrations.CreateModel(
            name='NonPeriodicalOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('contract_number', models.CharField(blank=True, max_length=25, null=True, validators=[klib.validators.validate_contract_number], verbose_name='Contract number')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract date')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновой'), ('ACTIVE', 'Действующий'), ('PARTIALLY_CLOSED', 'Частично закрыт'), ('CLOSED', 'Закрыт')], default='ACTIVE', max_length=100, verbose_name='Order status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion date')),
                ('currency', djmoney.models.fields.CurrencyField(choices=[('XUA', 'ADB Unit of Account'), ('AFN', 'Afghan Afghani'), ('AFA', 'Afghan Afghani (1927–2002)'), ('ALL', 'Albanian Lek'), ('ALK', 'Albanian Lek (1946–1965)'), ('DZD', 'Algerian Dinar'), ('ADP', 'Andorran Peseta'), ('AOA', 'Angolan Kwanza'), ('AOK', 'Angolan Kwanza (1977–1991)'), ('AON', 'Angolan New Kwanza (1990–2000)'), ('AOR', 'Angolan Readjusted Kwanza (1995–1999)'), ('ARA', 'Argentine Austral'), ('ARS', 'Argentine Peso'), ('ARM', 'Argentine Peso (1881–1970)'), ('ARP', 'Argentine Peso (1983–1985)'), ('ARL', 'Argentine Peso Ley (1970–1983)'), ('AMD', 'Armenian Dram'), ('AWG', 'Aruban Florin'), ('AUD', 'Australian Dollar'), ('ATS', 'Austrian Schilling'), ('AZN', 'Azerbaijani Manat'), ('AZM', 'Azerbaijani Manat (1993–2006)'), ('BSD', 'Bahamian Dollar'), ('BHD', 'Bahraini Dinar'), ('BDT', 'Bangladeshi Taka'), ('BBD', 'Barbadian Dollar'), ('BYN', 'Belarusian Ruble'), ('BYB', 'Belarusian Ruble (1994–1999)'), ('BYR', 'Belarusian Ruble (2000–2016)'), ('BEF', 'Belgian Franc'), ('BEC', 'Belgian Franc (convertible)'), ('BEL', 'Belgian Franc (financial)'), ('BZD', 'Belize Dollar'), ('BMD', 'Bermudan Dollar'), ('BTN', 'Bhutanese Ngultrum'), ('BOB', 'Bolivian Boliviano'), ('BOL', 'Bolivian Boliviano (1863–1963)'), ('BOV', 'Bolivian Mvdol'), ('BOP', 'Bolivian Peso'), ('VED', 'Bolívar Soberano'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BAD', 'Bosnia-Herzegovina Dinar (1992–1994)'), ('BAN', 'Bosnia-Herzegovina New Dinar (1994–1997)'), ('BWP', 'Botswanan Pula'), ('BRC', 'Brazilian Cruzado (1986–1989)'), ('BRZ', 'Brazilian Cruzeiro (1942–1967)'), ('BRE', 'Brazilian Cruzeiro (1990–1993)'), ('BRR', 'Brazilian Cruzeiro (1993–1994)'), ('BRN', 'Brazilian New Cruzado (1989–1990)'), ('BRB', 'Brazilian New Cruzeiro (1967–1986)'), ('BRL', 'Brazilian Real'), ('GBP', 'British Pound'), ('BND', 'Brunei Dollar'), ('BGL', 'Bulgarian Hard Lev'), ('BGN', 'Bulgarian Lev'), ('BGO', 'Bulgarian Lev (1879–1952)'), ('BGM', 'Bulgarian Socialist Lev'), ('BUK', 'Burmese Kyat'), ('BIF', 'Burundian Franc'), ('XPF', 'CFP Franc'), ('KHR', 'Cambodian Riel'), ('CAD', 'Canadian Dollar'), ('CVE', 'Cape Verdean Escudo'), ('KYD', 'Cayman Islands Dollar'), ('XAF', 'Central African CFA Franc'), ('CLE', 'Chilean Escudo'), ('CLP', 'Chilean Peso'), ('CLF', 'Chilean Unit of Account (UF)'), ('CNX', 'Chinese People’s Bank Dollar'), ('CNY', 'Chinese Yuan'), ('CNH', 'Chinese Yuan (offshore)'), ('COP', 'Colombian Peso'), ('COU', 'Colombian Real Value Unit'), ('KMF', 'Comorian Franc'), ('CDF', 'Congolese Franc'), ('CRC', 'Costa Rican Colón'), ('HRD', 'Croatian Dinar'), ('HRK', 'Croatian Kuna'), ('CUC', 'Cuban Convertible Peso'), ('CUP', 'Cuban Peso'), ('CYP', 'Cypriot Pound'), ('CZK', 'Czech Koruna'), ('CSK', 'Czechoslovak Hard Koruna'), ('DKK', 'Danish Krone'), ('DJF', 'Djiboutian Franc'), ('DOP', 'Dominican Peso'), ('NLG', 'Dutch Guilder'), ('XCD', 'East Caribbean Dollar'), ('DDM', 'East German Mark'), ('ECS', 'Ecuadorian Sucre'), ('ECV', 'Ecuadorian Unit of Constant Value'), ('EGP', 'Egyptian Pound'), ('GQE', 'Equatorial Guinean Ekwele'), ('ERN', 'Eritrean Nakfa'), ('EEK', 'Estonian Kroon'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('XBA', 'European Composite Unit'), ('XEU', 'European Currency Unit'), ('XBB', 'European Monetary Unit'), ('XBC', 'European Unit of Account (XBC)'), ('XBD', 'European Unit of Account (XBD)'), ('FKP', 'Falkland Islands Pound'), ('FJD', 'Fijian Dollar'), ('FIM', 'Finnish Markka'), ('FRF', 'French Franc'), ('XFO', 'French Gold Franc'), ('XFU', 'French UIC-Franc'), ('GMD', 'Gambian Dalasi'), ('GEK', 'Georgian Kupon Larit'), ('GEL', 'Georgian Lari'), ('DEM', 'German Mark'), ('GHS', 'Ghanaian Cedi'), ('GHC', 'Ghanaian Cedi (1979–2007)'), ('GIP', 'Gibraltar Pound'), ('XAU', 'Gold'), ('GRD', 'Greek Drachma'), ('GTQ', 'Guatemalan Quetzal'), ('GWP', 'Guinea-Bissau Peso'), ('GNF', 'Guinean Franc'), ('GNS', 'Guinean Syli'), ('GYD', 'Guyanaese Dollar'), ('HTG', 'Haitian Gourde'), ('HNL', 'Honduran Lempira'), ('HKD', 'Hong Kong Dollar'), ('HUF', 'Hungarian Forint'), ('IMP', 'IMP'), ('ISK', 'Icelandic Króna'), ('ISJ', 'Icelandic Króna (1918–1981)'), ('INR', 'Indian Rupee'), ('IDR', 'Indonesian Rupiah'), ('IRR', 'Iranian Rial'), ('IQD', 'Iraqi Dinar'), ('IEP', 'Irish Pound'), ('ILS', 'Israeli New Shekel'), ('ILP', 'Israeli Pound'), ('ILR', 'Israeli Shekel (1980–1985)'), ('ITL', 'Italian Lira'), ('JMD', 'Jamaican Dollar'), ('JPY', 'Japanese Yen'), ('JOD', 'Jordanian Dinar'), ('KZT', 'Kazakhstani Tenge'), ('KES', 'Kenyan Shilling'), ('KWD', 'Kuwaiti Dinar'), ('KGS', 'Kyrgystani Som'), ('LAK', 'Laotian Kip'), ('LVL', 'Latvian Lats'), ('LVR', 'Latvian Ruble'), ('LBP', 'Lebanese Pound'), ('LSL', 'Lesotho Loti'), ('LRD', 'Liberian Dollar'), ('LYD', 'Libyan Dinar'), ('LTL', 'Lithuanian Litas'), ('LTT', 'Lithuanian Talonas'), ('LUL', 'Luxembourg Financial Franc'), ('LUC', 'Luxembourgian Convertible Franc'), ('LUF', 'Luxembourgian Franc'), ('MOP', 'Macanese Pataca'), ('MKD', 'Macedonian Denar'), ('MKN', 'Macedonian Denar (1992–1993)'), ('MGA', 'Malagasy Ariary'), ('MGF', 'Malagasy Franc'), ('MWK', 'Malawian Kwacha'), ('MYR', 'Malaysian Ringgit'), ('MVR', 'Maldivian Rufiyaa'), ('MVP', 'Maldivian Rupee (1947–1981)'), ('MLF', 'Malian Franc'), ('MTL', 'Maltese Lira'), ('MTP', 'Maltese Pound'), ('MRU', 'Mauritanian Ouguiya'), ('MRO', 'Mauritanian Ouguiya (1973–2017)'), ('MUR', 'Mauritian Rupee'), ('MXV', 'Mexican Investment Unit'), ('MXN', 'Mexican Peso'), ('MXP', 'Mexican Silver Peso (1861–1992)'), ('MDC', 'Moldovan Cupon'), ('MDL', 'Moldovan Leu'), ('MCF', 'Monegasque Franc'), ('MNT', 'Mongolian Tugrik'), ('MAD', 'Moroccan Dirham'), ('MAF', 'Moroccan Franc'), ('MZE', 'Mozambican Escudo'), ('MZN', 'Mozambican Metical'), ('MZM', 'Mozambican Metical (1980–2006)'), ('MMK', 'Myanmar Kyat'), ('NAD', 'Namibian Dollar'), ('NPR', 'Nepalese Rupee'), ('ANG', 'Netherlands Antillean Guilder'), ('TWD', 'New Taiwan Dollar'), ('NZD', 'New Zealand Dollar'), ('NIO', 'Nicaraguan Córdoba'), ('NIC', 'Nicaraguan Córdoba (1988–1991)'), ('NGN', 'Nigerian Naira'), ('KPW', 'North Korean Won'), ('NOK', 'Norwegian Krone'), ('OMR', 'Omani Rial'), ('PKR', 'Pakistani Rupee'), ('XPD', 'Palladium'), ('PAB', 'Panamanian Balboa'), ('PGK', 'Papua New Guinean Kina'), ('PYG', 'Paraguayan Guarani'), ('PEI', 'Peruvian Inti'), ('PEN', 'Peruvian Sol'), ('PES', 'Peruvian Sol (1863–1965)'), ('PHP', 'Philippine Peso'), ('XPT', 'Platinum'), ('PLN', 'Polish Zloty'), ('PLZ', 'Polish Zloty (1950–1995)'), ('PTE', 'Portuguese Escudo'), ('GWE', 'Portuguese Guinea Escudo'), ('QAR', 'Qatari Riyal'), ('XRE', 'RINET Funds'), ('RHD', 'Rhodesian Dollar'), ('RON', 'Romanian Leu'), ('ROL', 'Romanian Leu (1952–2006)'), ('RUB', 'Russian Ruble'), ('RUR', 'Russian Ruble (1991–1998)'), ('RWF', 'Rwandan Franc'), ('SVC', 'Salvadoran Colón'), ('WST', 'Samoan Tala'), ('SAR', 'Saudi Riyal'), ('RSD', 'Serbian Dinar'), ('CSD', 'Serbian Dinar (2002–2006)'), ('SCR', 'Seychellois Rupee'), ('SLE', 'Sierra Leonean Leone'), ('SLL', 'Sierra Leonean Leone (1964—2022)'), ('XAG', 'Silver'), ('SGD', 'Singapore Dollar'), ('SKK', 'Slovak Koruna'), ('SIT', 'Slovenian Tolar'), ('SBD', 'Solomon Islands Dollar'), ('SOS', 'Somali Shilling'), ('ZAR', 'South African Rand'), ('ZAL', 'South African Rand (financial)'), ('KRH', 'South Korean Hwan (1953–1962)'), ('KRW', 'South Korean Won'), ('KRO', 'South Korean Won (1945–1953)'), ('SSP', 'South Sudanese Pound'), ('SUR', 'Soviet Rouble'), ('ESP', 'Spanish Peseta'), ('ESA', 'Spanish Peseta (A account)'), ('ESB', 'Spanish Peseta (convertible account)'), ('XDR', 'Special Drawing Rights'), ('LKR', 'Sri Lankan Rupee'), ('SHP', 'St. Helena Pound'), ('XSU', 'Sucre'), ('SDD', 'Sudanese Dinar (1992–2007)'), ('SDG', 'Sudanese Pound'), ('SDP', 'Sudanese Pound (1957–1998)'), ('SRD', 'Surinamese Dollar'), ('SRG', 'Surinamese Guilder'), ('SZL', 'Swazi Lilangeni'), ('SEK', 'Swedish Krona'), ('CHF', 'Swiss Franc'), ('SYP', 'Syrian Pound'), ('STN', 'São Tomé & Príncipe Dobra'), ('STD', 'São Tomé & Príncipe Dobra (1977–2017)'), ('TVD', 'TVD'), ('TJR', 'Tajikistani Ruble'), ('TJS', 'Tajikistani Somoni'), ('TZS', 'Tanzanian Shilling'), ('XTS', 'Testing Currency Code'), ('THB', 'Thai Baht'), ('TPE', 'Timorese Escudo'), ('TOP', 'Tongan Paʻanga'), ('TTD', 'Trinidad & Tobago Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TRL', 'Turkish Lira (1922–2005)'), ('TMT', 'Turkmenistani Manat'), ('TMM', 'Turkmenistani Manat (1993–2009)'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('USS', 'US Dollar (Same day)'), ('UGX', 'Ugandan Shilling'), ('UGS', 'Ugandan Shilling (1966–1987)'), ('UAH', 'Ukrainian Hryvnia'), ('UAK', 'Ukrainian Karbovanets'), ('AED', 'United Arab Emirates Dirham'), ('UYW', 'Uruguayan Nominal Wage Index Unit'), ('UYU', 'Uruguayan Peso'), ('UYP', 'Uruguayan Peso (1975–1993)'), ('UYI', 'Uruguayan Peso (Indexed Units)'), ('UZS', 'Uzbekistani Som'), ('VUV', 'Vanuatu Vatu'), ('VES', 'Venezuelan Bolívar'), ('VEB', 'Venezuelan Bolívar (1871–2008)'), ('VEF', 'Venezuelan Bolívar (2008–2018)'), ('VND', 'Vietnamese Dong'), ('VNN', 'Vietnamese Dong (1978–1985)'), ('CHE', 'WIR Euro'), ('CHW', 'WIR Franc'), ('XOF', 'West African CFA Franc'), ('YDD', 'Yemeni Dinar'), ('YER', 'Yemeni Rial'), ('YUN', 'Yugoslavian Convertible Dinar (1990–1992)'), ('YUD', 'Yugoslavian Hard Dinar (1966–1990)'), ('YUM', 'Yugoslavian New Dinar (1994–2002)'), ('YUR', 'Yugoslavian Reformed Dinar (1992–1993)'), ('ZWN', 'ZWN'), ('ZRN', 'Zairean New Zaire (1993–1998)'), ('ZRZ', 'Zairean Zaire (1971–1993)'), ('ZMW', 'Zambian Kwacha'), ('ZMK', 'Zambian Kwacha (1968–2012)'), ('ZWD', 'Zimbabwean Dollar (1980–2008)'), ('ZWR', 'Zimbabwean Dollar (2008)'), ('ZWL', 'Zimbabwean Dollar (2009)')], default='BYN', max_length=3, verbose_name='Currency')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total order price')),
                ('total_vat', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total order vat')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='klib.Company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Non Periodical Order',
                'verbose_name_plural': 'Non Periodical Orders',
            },
        ),
        migrations.CreateModel(
            name='PeriodicalEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('edition_type', models.CharField(choices=[('PERIODICAL', 'Periodical'), ('NON_PERIODICAL', 'Non-periodical')], default='PERIODICAL', max_length=256, verbose_name='Edition type')),
                ('edition_subtype', models.CharField(choices=[('MAGAZINES', 'Magazines type name'), ('NEWSPAPERS', 'Newspapers type name'), ('BOOK', 'Book type name'), ('BROCHURE', 'Brochure type name'), ('STD', 'STD type name'), ('INFORMATION_FLYER', 'Information Flyer type name'), ('STD_CHANGES', 'STD changes type name'), ('E_RESOURCE', 'E-resource type name')], default='MAGAZINES', max_length=256, verbose_name='Edition subtype')),
                ('title', models.CharField(max_length=150, verbose_name='Edition title')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('year', models.CharField(max_length=4, validators=[klib.validators.validate_year], verbose_name='Year')),
            ],
            options={
                'verbose_name': 'Periodical edition',
                'verbose_name_plural': 'Periodical editions',
            },
        ),
        migrations.CreateModel(
            name='ReplacementAct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act_number', models.CharField(blank=True, max_length=20, verbose_name='Act number')),
                ('act_date', models.DateField(default=datetime.date.today, verbose_name='Act date')),
                ('total_excluded', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total excluded from the fund')),
                ('socio_economic_count', models.PositiveIntegerField(default=0, verbose_name='Socio-economic')),
                ('technical_count', models.PositiveIntegerField(default=0, verbose_name='Technic')),
                ('other_count', models.PositiveIntegerField(default=0, verbose_name='Others')),
                ('railway_theme_count', models.PositiveIntegerField(default=0, verbose_name='On railway topics')),
                ('chairman', models.IntegerField(null=True, verbose_name='Chairman of the Commission')),
                ('vice_chairman', models.IntegerField(null=True, verbose_name='Deputy Chairman of the Commission')),
                ('member_1', models.IntegerField(null=True, verbose_name='Member of the Commission 1')),
                ('member_2', models.IntegerField(null=True, verbose_name='Member of the Commission 2')),
                ('member_3', models.IntegerField(null=True, verbose_name='Member of the Commission 3')),
                ('submitted_by', models.IntegerField(verbose_name='I handed over the written-off documents(a)')),
                ('registered_by', models.IntegerField(verbose_name='The act was carried out in the book of total accounting')),
            ],
            options={
                'verbose_name': 'Replacement Act',
                'verbose_name_plural': 'Replacement Acts',
            },
        ),
        migrations.CreateModel(
            name='WriteOffActFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act_number', models.CharField(blank=True, max_length=20, verbose_name='Act number')),
                ('act_date', models.DateField(default=datetime.date.today, verbose_name='Act date')),
                ('basis_for_write_off', models.CharField(max_length=255, verbose_name='The basis of the write-off')),
                ('total_excluded', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total excluded from the fund')),
                ('socio_economic_count', models.PositiveIntegerField(default=0, verbose_name='Socio-economic')),
                ('technical_count', models.PositiveIntegerField(default=0, verbose_name='Technic')),
                ('other_count', models.PositiveIntegerField(default=0, verbose_name='Others')),
                ('railway_theme_count', models.PositiveIntegerField(default=0, verbose_name='On railway topics')),
                ('chairman', models.IntegerField(null=True, verbose_name='Chairman of the Commission')),
                ('vice_chairman', models.IntegerField(null=True, verbose_name='Deputy Chairman of the Commission')),
                ('member_1', models.IntegerField(null=True, verbose_name='Member of the Commission 1')),
                ('member_2', models.IntegerField(null=True, verbose_name='Member of the Commission 2')),
                ('member_3', models.IntegerField(null=True, verbose_name='Member of the Commission 3')),
                ('submitted_by', models.IntegerField(verbose_name='I handed over the written-off documents(a)')),
                ('registered_by', models.IntegerField(verbose_name='The act was carried out in the book of total accounting')),
                ('selected_elements_info', models.TextField(blank=True, null=True, verbose_name='Selected elements info')),
                ('inventory_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inventory number')),
                ('subscription', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filing')),
            ],
            options={
                'verbose_name': 'Write off act files',
                'verbose_name_plural': 'Write off act files',
            },
        ),
        migrations.CreateModel(
            name='WriteOffActJournal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act_number', models.CharField(blank=True, max_length=20, verbose_name='Act number')),
                ('act_date', models.DateField(default=datetime.date.today, verbose_name='Act date')),
                ('basis_for_write_off', models.CharField(max_length=255, verbose_name='The basis of the write-off')),
                ('total_excluded', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total excluded from the fund')),
                ('socio_economic_count', models.PositiveIntegerField(default=0, verbose_name='Socio-economic')),
                ('technical_count', models.PositiveIntegerField(default=0, verbose_name='Technic')),
                ('other_count', models.PositiveIntegerField(default=0, verbose_name='Others')),
                ('railway_theme_count', models.PositiveIntegerField(default=0, verbose_name='On railway topics')),
                ('chairman', models.IntegerField(null=True, verbose_name='Chairman of the Commission')),
                ('vice_chairman', models.IntegerField(null=True, verbose_name='Deputy Chairman of the Commission')),
                ('member_1', models.IntegerField(null=True, verbose_name='Member of the Commission 1')),
                ('member_2', models.IntegerField(null=True, verbose_name='Member of the Commission 2')),
                ('member_3', models.IntegerField(null=True, verbose_name='Member of the Commission 3')),
                ('submitted_by', models.IntegerField(verbose_name='I handed over the written-off documents(a)')),
                ('registered_by', models.IntegerField(verbose_name='The act was carried out in the book of total accounting')),
                ('selected_elements_info', models.TextField(blank=True, null=True, verbose_name='Selected elements info')),
                ('inventory_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inventory number')),
            ],
            options={
                'verbose_name': 'The act of debiting',
                'verbose_name_plural': 'Acts of write-off',
            },
        ),
        migrations.CreateModel(
            name='WriteOffActNotPeriodicals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act_number', models.CharField(blank=True, max_length=20, verbose_name='Act number')),
                ('act_date', models.DateField(default=datetime.date.today, verbose_name='Act date')),
                ('basis_for_write_off', models.CharField(max_length=255, verbose_name='The basis of the write-off')),
                ('total_excluded', models.PositiveIntegerField(default=0, editable=False, verbose_name='Total excluded from the fund')),
                ('socio_economic_count', models.PositiveIntegerField(default=0, verbose_name='Socio-economic')),
                ('technical_count', models.PositiveIntegerField(default=0, verbose_name='Technic')),
                ('other_count', models.PositiveIntegerField(default=0, verbose_name='Others')),
                ('railway_theme_count', models.PositiveIntegerField(default=0, verbose_name='On railway topics')),
                ('chairman', models.IntegerField(null=True, verbose_name='Chairman of the Commission')),
                ('vice_chairman', models.IntegerField(null=True, verbose_name='Deputy Chairman of the Commission')),
                ('member_1', models.IntegerField(null=True, verbose_name='Member of the Commission 1')),
                ('member_2', models.IntegerField(null=True, verbose_name='Member of the Commission 2')),
                ('member_3', models.IntegerField(null=True, verbose_name='Member of the Commission 3')),
                ('submitted_by', models.IntegerField(verbose_name='I handed over the written-off documents(a)')),
                ('registered_by', models.IntegerField(verbose_name='The act was carried out in the book of total accounting')),
                ('selected_elements_info', models.TextField(blank=True, null=True, verbose_name='Selected elements info')),
                ('inventory_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inventory number')),
            ],
            options={
                'verbose_name': 'Write off act not periodicals',
                'verbose_name_plural': 'Write off act not periodicals',
            },
        ),
        migrations.CreateModel(
            name='ReplaceEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='klib.ReplacementAct', verbose_name='Replacement Act')),
                ('replaceable_edition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaceable_editions', to='klib.BaseFundElement', verbose_name='Replaceable edition')),
                ('replacing_edition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replacing_editions', to='klib.BaseEdition', verbose_name='Replacing edition')),
                ('replacing_fund_element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replacing_fund_elements', to='klib.BaseFundElement', verbose_name='Replacing fund element')),
            ],
            options={
                'verbose_name': 'Replace edition',
                'verbose_name_plural': 'Replace editions',
            },
        ),
        migrations.CreateModel(
            name='OpenInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='klib.BaseEdition', verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Open inventory',
                'verbose_name_plural': 'Open inventorys',
            },
        ),
        migrations.CreateModel(
            name='NonPeriodicalOrderElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('number_of_copies', models.PositiveIntegerField(verbose_name='Number of copies')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total price')),
                ('vat_rate', models.PositiveIntegerField(default=20, verbose_name='Vat rate')),
                ('edition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='non_periodical_edition', to='klib.NonPeriodicalEdition', verbose_name='Title of the publication')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='non_periodical_orders', to='klib.NonPeriodicalOrder', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Edition',
                'verbose_name_plural': 'Editions',
            },
        ),
        migrations.CreateModel(
            name='NewspaperOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('contract_number', models.CharField(blank=True, max_length=25, null=True, validators=[klib.validators.validate_contract_number], verbose_name='Contract number')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract date')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновой'), ('ACTIVE', 'Действующий'), ('PARTIALLY_CLOSED', 'Частично закрыт'), ('CLOSED', 'Закрыт')], default='ACTIVE', max_length=100, verbose_name='Order status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion date')),
                ('duration_of_receipt', models.PositiveIntegerField(verbose_name='Duration of receipt')),
                ('first_number', models.PositiveIntegerField(validators=[klib.validators.validate_edition_number], verbose_name='First issue number')),
                ('last_number', models.PositiveIntegerField(validators=[klib.validators.validate_edition_number], verbose_name='Last issue number')),
                ('number_of_copies', models.PositiveIntegerField(validators=[klib.validators.validate_number_of_copies], verbose_name='Number of copies of one issue')),
                ('total_issue_numbers', models.PositiveIntegerField(verbose_name='Total number of issue numbers')),
                ('duration_of_storage', models.PositiveIntegerField(verbose_name='Duration of storage')),
                ('price_per_instance_currency', djmoney.models.fields.CurrencyField(choices=[('XUA', 'ADB Unit of Account'), ('AFN', 'Afghan Afghani'), ('AFA', 'Afghan Afghani (1927–2002)'), ('ALL', 'Albanian Lek'), ('ALK', 'Albanian Lek (1946–1965)'), ('DZD', 'Algerian Dinar'), ('ADP', 'Andorran Peseta'), ('AOA', 'Angolan Kwanza'), ('AOK', 'Angolan Kwanza (1977–1991)'), ('AON', 'Angolan New Kwanza (1990–2000)'), ('AOR', 'Angolan Readjusted Kwanza (1995–1999)'), ('ARA', 'Argentine Austral'), ('ARS', 'Argentine Peso'), ('ARM', 'Argentine Peso (1881–1970)'), ('ARP', 'Argentine Peso (1983–1985)'), ('ARL', 'Argentine Peso Ley (1970–1983)'), ('AMD', 'Armenian Dram'), ('AWG', 'Aruban Florin'), ('AUD', 'Australian Dollar'), ('ATS', 'Austrian Schilling'), ('AZN', 'Azerbaijani Manat'), ('AZM', 'Azerbaijani Manat (1993–2006)'), ('BSD', 'Bahamian Dollar'), ('BHD', 'Bahraini Dinar'), ('BDT', 'Bangladeshi Taka'), ('BBD', 'Barbadian Dollar'), ('BYN', 'Belarusian Ruble'), ('BYB', 'Belarusian Ruble (1994–1999)'), ('BYR', 'Belarusian Ruble (2000–2016)'), ('BEF', 'Belgian Franc'), ('BEC', 'Belgian Franc (convertible)'), ('BEL', 'Belgian Franc (financial)'), ('BZD', 'Belize Dollar'), ('BMD', 'Bermudan Dollar'), ('BTN', 'Bhutanese Ngultrum'), ('BOB', 'Bolivian Boliviano'), ('BOL', 'Bolivian Boliviano (1863–1963)'), ('BOV', 'Bolivian Mvdol'), ('BOP', 'Bolivian Peso'), ('VED', 'Bolívar Soberano'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BAD', 'Bosnia-Herzegovina Dinar (1992–1994)'), ('BAN', 'Bosnia-Herzegovina New Dinar (1994–1997)'), ('BWP', 'Botswanan Pula'), ('BRC', 'Brazilian Cruzado (1986–1989)'), ('BRZ', 'Brazilian Cruzeiro (1942–1967)'), ('BRE', 'Brazilian Cruzeiro (1990–1993)'), ('BRR', 'Brazilian Cruzeiro (1993–1994)'), ('BRN', 'Brazilian New Cruzado (1989–1990)'), ('BRB', 'Brazilian New Cruzeiro (1967–1986)'), ('BRL', 'Brazilian Real'), ('GBP', 'British Pound'), ('BND', 'Brunei Dollar'), ('BGL', 'Bulgarian Hard Lev'), ('BGN', 'Bulgarian Lev'), ('BGO', 'Bulgarian Lev (1879–1952)'), ('BGM', 'Bulgarian Socialist Lev'), ('BUK', 'Burmese Kyat'), ('BIF', 'Burundian Franc'), ('XPF', 'CFP Franc'), ('KHR', 'Cambodian Riel'), ('CAD', 'Canadian Dollar'), ('CVE', 'Cape Verdean Escudo'), ('KYD', 'Cayman Islands Dollar'), ('XAF', 'Central African CFA Franc'), ('CLE', 'Chilean Escudo'), ('CLP', 'Chilean Peso'), ('CLF', 'Chilean Unit of Account (UF)'), ('CNX', 'Chinese People’s Bank Dollar'), ('CNY', 'Chinese Yuan'), ('CNH', 'Chinese Yuan (offshore)'), ('COP', 'Colombian Peso'), ('COU', 'Colombian Real Value Unit'), ('KMF', 'Comorian Franc'), ('CDF', 'Congolese Franc'), ('CRC', 'Costa Rican Colón'), ('HRD', 'Croatian Dinar'), ('HRK', 'Croatian Kuna'), ('CUC', 'Cuban Convertible Peso'), ('CUP', 'Cuban Peso'), ('CYP', 'Cypriot Pound'), ('CZK', 'Czech Koruna'), ('CSK', 'Czechoslovak Hard Koruna'), ('DKK', 'Danish Krone'), ('DJF', 'Djiboutian Franc'), ('DOP', 'Dominican Peso'), ('NLG', 'Dutch Guilder'), ('XCD', 'East Caribbean Dollar'), ('DDM', 'East German Mark'), ('ECS', 'Ecuadorian Sucre'), ('ECV', 'Ecuadorian Unit of Constant Value'), ('EGP', 'Egyptian Pound'), ('GQE', 'Equatorial Guinean Ekwele'), ('ERN', 'Eritrean Nakfa'), ('EEK', 'Estonian Kroon'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('XBA', 'European Composite Unit'), ('XEU', 'European Currency Unit'), ('XBB', 'European Monetary Unit'), ('XBC', 'European Unit of Account (XBC)'), ('XBD', 'European Unit of Account (XBD)'), ('FKP', 'Falkland Islands Pound'), ('FJD', 'Fijian Dollar'), ('FIM', 'Finnish Markka'), ('FRF', 'French Franc'), ('XFO', 'French Gold Franc'), ('XFU', 'French UIC-Franc'), ('GMD', 'Gambian Dalasi'), ('GEK', 'Georgian Kupon Larit'), ('GEL', 'Georgian Lari'), ('DEM', 'German Mark'), ('GHS', 'Ghanaian Cedi'), ('GHC', 'Ghanaian Cedi (1979–2007)'), ('GIP', 'Gibraltar Pound'), ('XAU', 'Gold'), ('GRD', 'Greek Drachma'), ('GTQ', 'Guatemalan Quetzal'), ('GWP', 'Guinea-Bissau Peso'), ('GNF', 'Guinean Franc'), ('GNS', 'Guinean Syli'), ('GYD', 'Guyanaese Dollar'), ('HTG', 'Haitian Gourde'), ('HNL', 'Honduran Lempira'), ('HKD', 'Hong Kong Dollar'), ('HUF', 'Hungarian Forint'), ('IMP', 'IMP'), ('ISK', 'Icelandic Króna'), ('ISJ', 'Icelandic Króna (1918–1981)'), ('INR', 'Indian Rupee'), ('IDR', 'Indonesian Rupiah'), ('IRR', 'Iranian Rial'), ('IQD', 'Iraqi Dinar'), ('IEP', 'Irish Pound'), ('ILS', 'Israeli New Shekel'), ('ILP', 'Israeli Pound'), ('ILR', 'Israeli Shekel (1980–1985)'), ('ITL', 'Italian Lira'), ('JMD', 'Jamaican Dollar'), ('JPY', 'Japanese Yen'), ('JOD', 'Jordanian Dinar'), ('KZT', 'Kazakhstani Tenge'), ('KES', 'Kenyan Shilling'), ('KWD', 'Kuwaiti Dinar'), ('KGS', 'Kyrgystani Som'), ('LAK', 'Laotian Kip'), ('LVL', 'Latvian Lats'), ('LVR', 'Latvian Ruble'), ('LBP', 'Lebanese Pound'), ('LSL', 'Lesotho Loti'), ('LRD', 'Liberian Dollar'), ('LYD', 'Libyan Dinar'), ('LTL', 'Lithuanian Litas'), ('LTT', 'Lithuanian Talonas'), ('LUL', 'Luxembourg Financial Franc'), ('LUC', 'Luxembourgian Convertible Franc'), ('LUF', 'Luxembourgian Franc'), ('MOP', 'Macanese Pataca'), ('MKD', 'Macedonian Denar'), ('MKN', 'Macedonian Denar (1992–1993)'), ('MGA', 'Malagasy Ariary'), ('MGF', 'Malagasy Franc'), ('MWK', 'Malawian Kwacha'), ('MYR', 'Malaysian Ringgit'), ('MVR', 'Maldivian Rufiyaa'), ('MVP', 'Maldivian Rupee (1947–1981)'), ('MLF', 'Malian Franc'), ('MTL', 'Maltese Lira'), ('MTP', 'Maltese Pound'), ('MRU', 'Mauritanian Ouguiya'), ('MRO', 'Mauritanian Ouguiya (1973–2017)'), ('MUR', 'Mauritian Rupee'), ('MXV', 'Mexican Investment Unit'), ('MXN', 'Mexican Peso'), ('MXP', 'Mexican Silver Peso (1861–1992)'), ('MDC', 'Moldovan Cupon'), ('MDL', 'Moldovan Leu'), ('MCF', 'Monegasque Franc'), ('MNT', 'Mongolian Tugrik'), ('MAD', 'Moroccan Dirham'), ('MAF', 'Moroccan Franc'), ('MZE', 'Mozambican Escudo'), ('MZN', 'Mozambican Metical'), ('MZM', 'Mozambican Metical (1980–2006)'), ('MMK', 'Myanmar Kyat'), ('NAD', 'Namibian Dollar'), ('NPR', 'Nepalese Rupee'), ('ANG', 'Netherlands Antillean Guilder'), ('TWD', 'New Taiwan Dollar'), ('NZD', 'New Zealand Dollar'), ('NIO', 'Nicaraguan Córdoba'), ('NIC', 'Nicaraguan Córdoba (1988–1991)'), ('NGN', 'Nigerian Naira'), ('KPW', 'North Korean Won'), ('NOK', 'Norwegian Krone'), ('OMR', 'Omani Rial'), ('PKR', 'Pakistani Rupee'), ('XPD', 'Palladium'), ('PAB', 'Panamanian Balboa'), ('PGK', 'Papua New Guinean Kina'), ('PYG', 'Paraguayan Guarani'), ('PEI', 'Peruvian Inti'), ('PEN', 'Peruvian Sol'), ('PES', 'Peruvian Sol (1863–1965)'), ('PHP', 'Philippine Peso'), ('XPT', 'Platinum'), ('PLN', 'Polish Zloty'), ('PLZ', 'Polish Zloty (1950–1995)'), ('PTE', 'Portuguese Escudo'), ('GWE', 'Portuguese Guinea Escudo'), ('QAR', 'Qatari Riyal'), ('XRE', 'RINET Funds'), ('RHD', 'Rhodesian Dollar'), ('RON', 'Romanian Leu'), ('ROL', 'Romanian Leu (1952–2006)'), ('RUB', 'Russian Ruble'), ('RUR', 'Russian Ruble (1991–1998)'), ('RWF', 'Rwandan Franc'), ('SVC', 'Salvadoran Colón'), ('WST', 'Samoan Tala'), ('SAR', 'Saudi Riyal'), ('RSD', 'Serbian Dinar'), ('CSD', 'Serbian Dinar (2002–2006)'), ('SCR', 'Seychellois Rupee'), ('SLE', 'Sierra Leonean Leone'), ('SLL', 'Sierra Leonean Leone (1964—2022)'), ('XAG', 'Silver'), ('SGD', 'Singapore Dollar'), ('SKK', 'Slovak Koruna'), ('SIT', 'Slovenian Tolar'), ('SBD', 'Solomon Islands Dollar'), ('SOS', 'Somali Shilling'), ('ZAR', 'South African Rand'), ('ZAL', 'South African Rand (financial)'), ('KRH', 'South Korean Hwan (1953–1962)'), ('KRW', 'South Korean Won'), ('KRO', 'South Korean Won (1945–1953)'), ('SSP', 'South Sudanese Pound'), ('SUR', 'Soviet Rouble'), ('ESP', 'Spanish Peseta'), ('ESA', 'Spanish Peseta (A account)'), ('ESB', 'Spanish Peseta (convertible account)'), ('XDR', 'Special Drawing Rights'), ('LKR', 'Sri Lankan Rupee'), ('SHP', 'St. Helena Pound'), ('XSU', 'Sucre'), ('SDD', 'Sudanese Dinar (1992–2007)'), ('SDG', 'Sudanese Pound'), ('SDP', 'Sudanese Pound (1957–1998)'), ('SRD', 'Surinamese Dollar'), ('SRG', 'Surinamese Guilder'), ('SZL', 'Swazi Lilangeni'), ('SEK', 'Swedish Krona'), ('CHF', 'Swiss Franc'), ('SYP', 'Syrian Pound'), ('STN', 'São Tomé & Príncipe Dobra'), ('STD', 'São Tomé & Príncipe Dobra (1977–2017)'), ('TVD', 'TVD'), ('TJR', 'Tajikistani Ruble'), ('TJS', 'Tajikistani Somoni'), ('TZS', 'Tanzanian Shilling'), ('XTS', 'Testing Currency Code'), ('THB', 'Thai Baht'), ('TPE', 'Timorese Escudo'), ('TOP', 'Tongan Paʻanga'), ('TTD', 'Trinidad & Tobago Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TRL', 'Turkish Lira (1922–2005)'), ('TMT', 'Turkmenistani Manat'), ('TMM', 'Turkmenistani Manat (1993–2009)'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('USS', 'US Dollar (Same day)'), ('UGX', 'Ugandan Shilling'), ('UGS', 'Ugandan Shilling (1966–1987)'), ('UAH', 'Ukrainian Hryvnia'), ('UAK', 'Ukrainian Karbovanets'), ('AED', 'United Arab Emirates Dirham'), ('UYW', 'Uruguayan Nominal Wage Index Unit'), ('UYU', 'Uruguayan Peso'), ('UYP', 'Uruguayan Peso (1975–1993)'), ('UYI', 'Uruguayan Peso (Indexed Units)'), ('UZS', 'Uzbekistani Som'), ('VUV', 'Vanuatu Vatu'), ('VES', 'Venezuelan Bolívar'), ('VEB', 'Venezuelan Bolívar (1871–2008)'), ('VEF', 'Venezuelan Bolívar (2008–2018)'), ('VND', 'Vietnamese Dong'), ('VNN', 'Vietnamese Dong (1978–1985)'), ('CHE', 'WIR Euro'), ('CHW', 'WIR Franc'), ('XOF', 'West African CFA Franc'), ('YDD', 'Yemeni Dinar'), ('YER', 'Yemeni Rial'), ('YUN', 'Yugoslavian Convertible Dinar (1990–1992)'), ('YUD', 'Yugoslavian Hard Dinar (1966–1990)'), ('YUM', 'Yugoslavian New Dinar (1994–2002)'), ('YUR', 'Yugoslavian Reformed Dinar (1992–1993)'), ('ZWN', 'ZWN'), ('ZRN', 'Zairean New Zaire (1993–1998)'), ('ZRZ', 'Zairean Zaire (1971–1993)'), ('ZMW', 'Zambian Kwacha'), ('ZMK', 'Zambian Kwacha (1968–2012)'), ('ZWD', 'Zimbabwean Dollar (1980–2008)'), ('ZWR', 'Zimbabwean Dollar (2008)'), ('ZWL', 'Zimbabwean Dollar (2009)')], default='BYN', editable=False, max_length=3)),
                ('price_per_instance', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='BYN', max_digits=10, verbose_name='Price per instance')),
                ('vat_rate', models.PositiveIntegerField(default=20, validators=[klib.validators.validate_vat_rate], verbose_name='Vat rate')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total price')),
                ('addition_agreement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Addition agreement')),
                ('agreement_date', models.DateField(blank=True, null=True, verbose_name='Agreement date')),
                ('bound_year', models.IntegerField(validators=[klib.validators.validate_year], verbose_name='Bound year')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='klib.Company', verbose_name='Company')),
                ('edition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newspaper_orders', to='klib.PeriodicalEdition', verbose_name='Title of the publication')),
            ],
            options={
                'verbose_name': 'Newspaper order',
                'verbose_name_plural': 'Newspaper orders',
            },
        ),
        migrations.CreateModel(
            name='JournalOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('contract_number', models.CharField(blank=True, max_length=25, null=True, validators=[klib.validators.validate_contract_number], verbose_name='Contract number')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract date')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновой'), ('ACTIVE', 'Действующий'), ('PARTIALLY_CLOSED', 'Частично закрыт'), ('CLOSED', 'Закрыт')], default='ACTIVE', max_length=100, verbose_name='Order status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion date')),
                ('duration_of_receipt', models.PositiveIntegerField(verbose_name='Duration of receipt')),
                ('first_number', models.PositiveIntegerField(validators=[klib.validators.validate_edition_number], verbose_name='First issue number')),
                ('last_number', models.PositiveIntegerField(validators=[klib.validators.validate_edition_number], verbose_name='Last issue number')),
                ('number_of_copies', models.PositiveIntegerField(validators=[klib.validators.validate_number_of_copies], verbose_name='Number of copies of one issue')),
                ('total_issue_numbers', models.PositiveIntegerField(verbose_name='Total number of issue numbers')),
                ('duration_of_storage', models.PositiveIntegerField(verbose_name='Duration of storage')),
                ('price_per_instance_currency', djmoney.models.fields.CurrencyField(choices=[('XUA', 'ADB Unit of Account'), ('AFN', 'Afghan Afghani'), ('AFA', 'Afghan Afghani (1927–2002)'), ('ALL', 'Albanian Lek'), ('ALK', 'Albanian Lek (1946–1965)'), ('DZD', 'Algerian Dinar'), ('ADP', 'Andorran Peseta'), ('AOA', 'Angolan Kwanza'), ('AOK', 'Angolan Kwanza (1977–1991)'), ('AON', 'Angolan New Kwanza (1990–2000)'), ('AOR', 'Angolan Readjusted Kwanza (1995–1999)'), ('ARA', 'Argentine Austral'), ('ARS', 'Argentine Peso'), ('ARM', 'Argentine Peso (1881–1970)'), ('ARP', 'Argentine Peso (1983–1985)'), ('ARL', 'Argentine Peso Ley (1970–1983)'), ('AMD', 'Armenian Dram'), ('AWG', 'Aruban Florin'), ('AUD', 'Australian Dollar'), ('ATS', 'Austrian Schilling'), ('AZN', 'Azerbaijani Manat'), ('AZM', 'Azerbaijani Manat (1993–2006)'), ('BSD', 'Bahamian Dollar'), ('BHD', 'Bahraini Dinar'), ('BDT', 'Bangladeshi Taka'), ('BBD', 'Barbadian Dollar'), ('BYN', 'Belarusian Ruble'), ('BYB', 'Belarusian Ruble (1994–1999)'), ('BYR', 'Belarusian Ruble (2000–2016)'), ('BEF', 'Belgian Franc'), ('BEC', 'Belgian Franc (convertible)'), ('BEL', 'Belgian Franc (financial)'), ('BZD', 'Belize Dollar'), ('BMD', 'Bermudan Dollar'), ('BTN', 'Bhutanese Ngultrum'), ('BOB', 'Bolivian Boliviano'), ('BOL', 'Bolivian Boliviano (1863–1963)'), ('BOV', 'Bolivian Mvdol'), ('BOP', 'Bolivian Peso'), ('VED', 'Bolívar Soberano'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BAD', 'Bosnia-Herzegovina Dinar (1992–1994)'), ('BAN', 'Bosnia-Herzegovina New Dinar (1994–1997)'), ('BWP', 'Botswanan Pula'), ('BRC', 'Brazilian Cruzado (1986–1989)'), ('BRZ', 'Brazilian Cruzeiro (1942–1967)'), ('BRE', 'Brazilian Cruzeiro (1990–1993)'), ('BRR', 'Brazilian Cruzeiro (1993–1994)'), ('BRN', 'Brazilian New Cruzado (1989–1990)'), ('BRB', 'Brazilian New Cruzeiro (1967–1986)'), ('BRL', 'Brazilian Real'), ('GBP', 'British Pound'), ('BND', 'Brunei Dollar'), ('BGL', 'Bulgarian Hard Lev'), ('BGN', 'Bulgarian Lev'), ('BGO', 'Bulgarian Lev (1879–1952)'), ('BGM', 'Bulgarian Socialist Lev'), ('BUK', 'Burmese Kyat'), ('BIF', 'Burundian Franc'), ('XPF', 'CFP Franc'), ('KHR', 'Cambodian Riel'), ('CAD', 'Canadian Dollar'), ('CVE', 'Cape Verdean Escudo'), ('KYD', 'Cayman Islands Dollar'), ('XAF', 'Central African CFA Franc'), ('CLE', 'Chilean Escudo'), ('CLP', 'Chilean Peso'), ('CLF', 'Chilean Unit of Account (UF)'), ('CNX', 'Chinese People’s Bank Dollar'), ('CNY', 'Chinese Yuan'), ('CNH', 'Chinese Yuan (offshore)'), ('COP', 'Colombian Peso'), ('COU', 'Colombian Real Value Unit'), ('KMF', 'Comorian Franc'), ('CDF', 'Congolese Franc'), ('CRC', 'Costa Rican Colón'), ('HRD', 'Croatian Dinar'), ('HRK', 'Croatian Kuna'), ('CUC', 'Cuban Convertible Peso'), ('CUP', 'Cuban Peso'), ('CYP', 'Cypriot Pound'), ('CZK', 'Czech Koruna'), ('CSK', 'Czechoslovak Hard Koruna'), ('DKK', 'Danish Krone'), ('DJF', 'Djiboutian Franc'), ('DOP', 'Dominican Peso'), ('NLG', 'Dutch Guilder'), ('XCD', 'East Caribbean Dollar'), ('DDM', 'East German Mark'), ('ECS', 'Ecuadorian Sucre'), ('ECV', 'Ecuadorian Unit of Constant Value'), ('EGP', 'Egyptian Pound'), ('GQE', 'Equatorial Guinean Ekwele'), ('ERN', 'Eritrean Nakfa'), ('EEK', 'Estonian Kroon'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('XBA', 'European Composite Unit'), ('XEU', 'European Currency Unit'), ('XBB', 'European Monetary Unit'), ('XBC', 'European Unit of Account (XBC)'), ('XBD', 'European Unit of Account (XBD)'), ('FKP', 'Falkland Islands Pound'), ('FJD', 'Fijian Dollar'), ('FIM', 'Finnish Markka'), ('FRF', 'French Franc'), ('XFO', 'French Gold Franc'), ('XFU', 'French UIC-Franc'), ('GMD', 'Gambian Dalasi'), ('GEK', 'Georgian Kupon Larit'), ('GEL', 'Georgian Lari'), ('DEM', 'German Mark'), ('GHS', 'Ghanaian Cedi'), ('GHC', 'Ghanaian Cedi (1979–2007)'), ('GIP', 'Gibraltar Pound'), ('XAU', 'Gold'), ('GRD', 'Greek Drachma'), ('GTQ', 'Guatemalan Quetzal'), ('GWP', 'Guinea-Bissau Peso'), ('GNF', 'Guinean Franc'), ('GNS', 'Guinean Syli'), ('GYD', 'Guyanaese Dollar'), ('HTG', 'Haitian Gourde'), ('HNL', 'Honduran Lempira'), ('HKD', 'Hong Kong Dollar'), ('HUF', 'Hungarian Forint'), ('IMP', 'IMP'), ('ISK', 'Icelandic Króna'), ('ISJ', 'Icelandic Króna (1918–1981)'), ('INR', 'Indian Rupee'), ('IDR', 'Indonesian Rupiah'), ('IRR', 'Iranian Rial'), ('IQD', 'Iraqi Dinar'), ('IEP', 'Irish Pound'), ('ILS', 'Israeli New Shekel'), ('ILP', 'Israeli Pound'), ('ILR', 'Israeli Shekel (1980–1985)'), ('ITL', 'Italian Lira'), ('JMD', 'Jamaican Dollar'), ('JPY', 'Japanese Yen'), ('JOD', 'Jordanian Dinar'), ('KZT', 'Kazakhstani Tenge'), ('KES', 'Kenyan Shilling'), ('KWD', 'Kuwaiti Dinar'), ('KGS', 'Kyrgystani Som'), ('LAK', 'Laotian Kip'), ('LVL', 'Latvian Lats'), ('LVR', 'Latvian Ruble'), ('LBP', 'Lebanese Pound'), ('LSL', 'Lesotho Loti'), ('LRD', 'Liberian Dollar'), ('LYD', 'Libyan Dinar'), ('LTL', 'Lithuanian Litas'), ('LTT', 'Lithuanian Talonas'), ('LUL', 'Luxembourg Financial Franc'), ('LUC', 'Luxembourgian Convertible Franc'), ('LUF', 'Luxembourgian Franc'), ('MOP', 'Macanese Pataca'), ('MKD', 'Macedonian Denar'), ('MKN', 'Macedonian Denar (1992–1993)'), ('MGA', 'Malagasy Ariary'), ('MGF', 'Malagasy Franc'), ('MWK', 'Malawian Kwacha'), ('MYR', 'Malaysian Ringgit'), ('MVR', 'Maldivian Rufiyaa'), ('MVP', 'Maldivian Rupee (1947–1981)'), ('MLF', 'Malian Franc'), ('MTL', 'Maltese Lira'), ('MTP', 'Maltese Pound'), ('MRU', 'Mauritanian Ouguiya'), ('MRO', 'Mauritanian Ouguiya (1973–2017)'), ('MUR', 'Mauritian Rupee'), ('MXV', 'Mexican Investment Unit'), ('MXN', 'Mexican Peso'), ('MXP', 'Mexican Silver Peso (1861–1992)'), ('MDC', 'Moldovan Cupon'), ('MDL', 'Moldovan Leu'), ('MCF', 'Monegasque Franc'), ('MNT', 'Mongolian Tugrik'), ('MAD', 'Moroccan Dirham'), ('MAF', 'Moroccan Franc'), ('MZE', 'Mozambican Escudo'), ('MZN', 'Mozambican Metical'), ('MZM', 'Mozambican Metical (1980–2006)'), ('MMK', 'Myanmar Kyat'), ('NAD', 'Namibian Dollar'), ('NPR', 'Nepalese Rupee'), ('ANG', 'Netherlands Antillean Guilder'), ('TWD', 'New Taiwan Dollar'), ('NZD', 'New Zealand Dollar'), ('NIO', 'Nicaraguan Córdoba'), ('NIC', 'Nicaraguan Córdoba (1988–1991)'), ('NGN', 'Nigerian Naira'), ('KPW', 'North Korean Won'), ('NOK', 'Norwegian Krone'), ('OMR', 'Omani Rial'), ('PKR', 'Pakistani Rupee'), ('XPD', 'Palladium'), ('PAB', 'Panamanian Balboa'), ('PGK', 'Papua New Guinean Kina'), ('PYG', 'Paraguayan Guarani'), ('PEI', 'Peruvian Inti'), ('PEN', 'Peruvian Sol'), ('PES', 'Peruvian Sol (1863–1965)'), ('PHP', 'Philippine Peso'), ('XPT', 'Platinum'), ('PLN', 'Polish Zloty'), ('PLZ', 'Polish Zloty (1950–1995)'), ('PTE', 'Portuguese Escudo'), ('GWE', 'Portuguese Guinea Escudo'), ('QAR', 'Qatari Riyal'), ('XRE', 'RINET Funds'), ('RHD', 'Rhodesian Dollar'), ('RON', 'Romanian Leu'), ('ROL', 'Romanian Leu (1952–2006)'), ('RUB', 'Russian Ruble'), ('RUR', 'Russian Ruble (1991–1998)'), ('RWF', 'Rwandan Franc'), ('SVC', 'Salvadoran Colón'), ('WST', 'Samoan Tala'), ('SAR', 'Saudi Riyal'), ('RSD', 'Serbian Dinar'), ('CSD', 'Serbian Dinar (2002–2006)'), ('SCR', 'Seychellois Rupee'), ('SLE', 'Sierra Leonean Leone'), ('SLL', 'Sierra Leonean Leone (1964—2022)'), ('XAG', 'Silver'), ('SGD', 'Singapore Dollar'), ('SKK', 'Slovak Koruna'), ('SIT', 'Slovenian Tolar'), ('SBD', 'Solomon Islands Dollar'), ('SOS', 'Somali Shilling'), ('ZAR', 'South African Rand'), ('ZAL', 'South African Rand (financial)'), ('KRH', 'South Korean Hwan (1953–1962)'), ('KRW', 'South Korean Won'), ('KRO', 'South Korean Won (1945–1953)'), ('SSP', 'South Sudanese Pound'), ('SUR', 'Soviet Rouble'), ('ESP', 'Spanish Peseta'), ('ESA', 'Spanish Peseta (A account)'), ('ESB', 'Spanish Peseta (convertible account)'), ('XDR', 'Special Drawing Rights'), ('LKR', 'Sri Lankan Rupee'), ('SHP', 'St. Helena Pound'), ('XSU', 'Sucre'), ('SDD', 'Sudanese Dinar (1992–2007)'), ('SDG', 'Sudanese Pound'), ('SDP', 'Sudanese Pound (1957–1998)'), ('SRD', 'Surinamese Dollar'), ('SRG', 'Surinamese Guilder'), ('SZL', 'Swazi Lilangeni'), ('SEK', 'Swedish Krona'), ('CHF', 'Swiss Franc'), ('SYP', 'Syrian Pound'), ('STN', 'São Tomé & Príncipe Dobra'), ('STD', 'São Tomé & Príncipe Dobra (1977–2017)'), ('TVD', 'TVD'), ('TJR', 'Tajikistani Ruble'), ('TJS', 'Tajikistani Somoni'), ('TZS', 'Tanzanian Shilling'), ('XTS', 'Testing Currency Code'), ('THB', 'Thai Baht'), ('TPE', 'Timorese Escudo'), ('TOP', 'Tongan Paʻanga'), ('TTD', 'Trinidad & Tobago Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TRL', 'Turkish Lira (1922–2005)'), ('TMT', 'Turkmenistani Manat'), ('TMM', 'Turkmenistani Manat (1993–2009)'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('USS', 'US Dollar (Same day)'), ('UGX', 'Ugandan Shilling'), ('UGS', 'Ugandan Shilling (1966–1987)'), ('UAH', 'Ukrainian Hryvnia'), ('UAK', 'Ukrainian Karbovanets'), ('AED', 'United Arab Emirates Dirham'), ('UYW', 'Uruguayan Nominal Wage Index Unit'), ('UYU', 'Uruguayan Peso'), ('UYP', 'Uruguayan Peso (1975–1993)'), ('UYI', 'Uruguayan Peso (Indexed Units)'), ('UZS', 'Uzbekistani Som'), ('VUV', 'Vanuatu Vatu'), ('VES', 'Venezuelan Bolívar'), ('VEB', 'Venezuelan Bolívar (1871–2008)'), ('VEF', 'Venezuelan Bolívar (2008–2018)'), ('VND', 'Vietnamese Dong'), ('VNN', 'Vietnamese Dong (1978–1985)'), ('CHE', 'WIR Euro'), ('CHW', 'WIR Franc'), ('XOF', 'West African CFA Franc'), ('YDD', 'Yemeni Dinar'), ('YER', 'Yemeni Rial'), ('YUN', 'Yugoslavian Convertible Dinar (1990–1992)'), ('YUD', 'Yugoslavian Hard Dinar (1966–1990)'), ('YUM', 'Yugoslavian New Dinar (1994–2002)'), ('YUR', 'Yugoslavian Reformed Dinar (1992–1993)'), ('ZWN', 'ZWN'), ('ZRN', 'Zairean New Zaire (1993–1998)'), ('ZRZ', 'Zairean Zaire (1971–1993)'), ('ZMW', 'Zambian Kwacha'), ('ZMK', 'Zambian Kwacha (1968–2012)'), ('ZWD', 'Zimbabwean Dollar (1980–2008)'), ('ZWR', 'Zimbabwean Dollar (2008)'), ('ZWL', 'Zimbabwean Dollar (2009)')], default='BYN', editable=False, max_length=3)),
                ('price_per_instance', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='BYN', max_digits=10, verbose_name='Price per instance')),
                ('vat_rate', models.PositiveIntegerField(default=20, validators=[klib.validators.validate_vat_rate], verbose_name='Vat rate')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total price')),
                ('addition_agreement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Addition agreement')),
                ('agreement_date', models.DateField(blank=True, null=True, verbose_name='Agreement date')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='klib.Company', verbose_name='Company')),
                ('edition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_orders', to='klib.PeriodicalEdition', verbose_name='Title of the publication')),
            ],
            options={
                'verbose_name': 'Journal order',
                'verbose_name_plural': 'Journal orders',
            },
        ),
        migrations.CreateModel(
            name='DigitalResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('resource', models.FileField(max_length=256, upload_to='resources/', verbose_name='Resource')),
                ('copyright', models.BooleanField(default=False, verbose_name='Copyright')),
                ('type', models.CharField(choices=[('BOOK', 'Book type name'), ('ARTICLE', 'Article'), ('STD', 'STD type name'), ('INFORMATION_FLYER', 'Information Flyer type name'), ('STD_CHANGES', 'STD changes type name')], default='BOOK', max_length=64, verbose_name='Edition type')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('fund', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fund_digital_resource', to='klib.BaseFundElement', verbose_name='BaseFundElement')),
            ],
            options={
                'verbose_name': 'Digital resource',
                'verbose_name_plural': 'Digital resources',
            },
        ),
        migrations.CreateModel(
            name='BaseOrderEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('price_with_vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Price with vat')),
                ('price_without_vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Price without vat')),
                ('vat_rate', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Vat rate')),
                ('vat', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Vat')),
                ('balance_type', models.CharField(blank=True, choices=[('стоит на балансе', 'Стоит на балансе'), ('не стоит на балансе', 'Не стоит на балансе')], default='Стоит на балансе', max_length=20, null=True, verbose_name='Balance')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edition_ordereditions', to='klib.BaseEdition', verbose_name='Base edition')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_ordereditions', to='klib.BaseOrder', verbose_name='Base order')),
            ],
        ),
        migrations.AddField(
            model_name='baseorder',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='klib.Company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='baseorder',
            name='edition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edition_order', to='klib.BaseEdition', verbose_name='Base edition'),
        ),
        migrations.AddField(
            model_name='basearrival',
            name='edition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edition_arrival', to='klib.BaseEdition', verbose_name='Edition'),
        ),
        migrations.AddField(
            model_name='basearrival',
            name='order_edition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='non_periodical_edition', to='klib.BaseOrderEdition', verbose_name='Order edition'),
        ),
        migrations.CreateModel(
            name='BaseFundElementFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Fund element',
                'verbose_name_plural': 'Fund',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.basefundelement',),
        ),
        migrations.CreateModel(
            name='BaseFundElementMagazines',
            fields=[
            ],
            options={
                'verbose_name': 'Фонд журналы',
                'verbose_name_plural': 'Фонд журналов',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.basefundelement',),
        ),
        migrations.CreateModel(
            name='BaseFundElementMagazinesFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Фонд журналы',
                'verbose_name_plural': 'Фонд журналов',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.basefundelement',),
        ),
        migrations.CreateModel(
            name='BaseFundElementNewspapers',
            fields=[
            ],
            options={
                'verbose_name': 'Фонд газеты',
                'verbose_name_plural': 'Фонд газет',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.basefundelement',),
        ),
        migrations.CreateModel(
            name='BaseFundElementNewspapersFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Фонд газеты',
                'verbose_name_plural': 'Фонд газет',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.basefundelement',),
        ),
        migrations.CreateModel(
            name='BaseOrderFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Заказ непериодики',
                'verbose_name_plural': 'Заказы непериодики',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.baseorder',),
        ),
        migrations.CreateModel(
            name='BasePeriodicalOrder',
            fields=[
            ],
            options={
                'verbose_name': 'Заказ периодики',
                'verbose_name_plural': 'Заказы периодики',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.baseorder',),
        ),
        migrations.CreateModel(
            name='ReplacementActReplace',
            fields=[
            ],
            options={
                'verbose_name': 'Replacement Act Replace',
                'verbose_name_plural': 'Replacement Acts Replace',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.replacementact',),
        ),
        migrations.CreateModel(
            name='BasePeriodicalOrderFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Заказ периодики',
                'verbose_name_plural': 'Заказы периодики',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('klib.baseperiodicalorder',),
        ),
    ]
