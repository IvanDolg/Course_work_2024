# Generated by Django 2.2.12 on 2024-11-27 15:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountiongStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Accountiong statement',
                'verbose_name_plural': 'Аccounting statements',
            },
        ),
        migrations.CreateModel(
            name='BookCirculationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('report_type', models.CharField(choices=[('Date', 'Год'), ('User', 'Отдельный пользователь')], max_length=64, verbose_name='Report type')),
                ('year', models.IntegerField(blank=True, choices=[(2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], null=True, verbose_name='Год')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
                ('reader_id', models.IntegerField(blank=True, null=True, verbose_name='Id number reader')),
            ],
            options={
                'verbose_name': 'Book circulation report',
                'verbose_name_plural': 'Book circulation report',
            },
        ),
        migrations.CreateModel(
            name='BookIncompleteEdition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('year', models.IntegerField(choices=[(2005, '2005'), (2006, '2006'), (2007, '2007'), (2008, '2008'), (2009, '2009'), (2010, '2010'), (2011, '2011'), (2012, '2012'), (2013, '2013'), (2014, '2014'), (2015, '2015'), (2016, '2016'), (2017, '2017'), (2018, '2018'), (2019, '2019'), (2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024')], verbose_name='Год')),
                ('moth', models.IntegerField(choices=[(1, 'Январь'), (2, 'Февраль'), (3, 'Март'), (4, 'Апрель'), (5, 'Май'), (6, 'Июнь'), (7, 'Июль'), (8, 'Август'), (9, 'Сентябрь'), (10, 'Октябрь'), (11, 'Ноябрь'), (12, 'Декабрь')], verbose_name='Месяц')),
            ],
            options={
                'verbose_name': 'Book incomplete edition',
                'verbose_name_plural': 'Books incomplete editions',
            },
        ),
        migrations.CreateModel(
            name='BookIncompleteEditionNonPeriodicals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Book incomplete edition non periodicals',
                'verbose_name_plural': 'Books incomplete edition non periodicals',
            },
        ),
        migrations.CreateModel(
            name='CertificateAcceptancePeriodicals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Certificate acceptance periodicals',
                'verbose_name_plural': 'Certificate acceptance periodicals',
            },
        ),
        migrations.CreateModel(
            name='CreateDebtorsReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('report_type', models.CharField(choices=[('Date', 'По дате'), ('User', 'По пользователю')], max_length=64, verbose_name='Report type')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
                ('reader_id', models.IntegerField(blank=True, null=True, verbose_name='Id number reader')),
            ],
            options={
                'verbose_name': 'Debtors report',
                'verbose_name_plural': 'Debtors report',
            },
        ),
        migrations.CreateModel(
            name='CreateEducationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('education', models.CharField(blank=True, choices=[('general-average', 'Общее среднее'), ('secondary_special', 'Средне-специальное'), ('higher', 'Высшее'), ('vocational-training', 'Профессионально-техническое')], max_length=30, null=True, verbose_name='Education')),
                ('year', models.IntegerField(blank=True, choices=[(2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], null=True, verbose_name='Год')),
                ('add_excluded', models.BooleanField(default=False, verbose_name='Add excluded')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=75, null=True, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Create education report',
                'verbose_name_plural': 'Create education report',
            },
        ),
        migrations.CreateModel(
            name='CreateInventoryBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('template_type', models.CharField(choices=[('MAGAZINES', 'Magazines type name'), ('NEWSPAPERS', 'Newspapers type name'), ('BOOK', 'Book type name'), ('BROCHURE', 'Brochure type name'), ('STD', 'STD type name'), ('INFORMATION_FLYER', 'Information Flyer type name'), ('STD_CHANGES', 'STD changes type name'), ('E_RESOURCE', 'E-resource type name')], default='BOOK', max_length=50, verbose_name='Template type')),
                ('first_inventory_number', models.IntegerField(blank=True, null=True, verbose_name='First inventory number')),
                ('last_inventory_number', models.IntegerField(blank=True, null=True, verbose_name='Last inventory number')),
                ('all_edition', models.BooleanField(verbose_name='All edition')),
                ('display_excluded_editions', models.BooleanField(verbose_name='Display excluded editions')),
                ('display_current_editions', models.BooleanField(verbose_name='Display current editions')),
                ('date_of_create', models.DateField(verbose_name='Date of create')),
            ],
            options={
                'verbose_name': 'Create inventory book',
                'verbose_name_plural': 'Create inventory books',
            },
        ),
        migrations.CreateModel(
            name='CreateWorkplaceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('organization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organization')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('year', models.IntegerField(blank=True, choices=[(2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], null=True, verbose_name='Год')),
                ('add_excluded', models.BooleanField(default=False, verbose_name='Add excluded')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=75, null=True, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Create workplace report',
                'verbose_name_plural': 'Create workplace report',
            },
        ),
        migrations.CreateModel(
            name='PeriodicalsAcceptanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Periodicals acceptance report',
                'verbose_name_plural': 'Periodicals acceptance reports',
            },
        ),
        migrations.CreateModel(
            name='StorageReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('type_of_report', models.CharField(choices=[('ISSUED_LITERATURE', 'Выдано'), ('RETURNED_LITERATURE', 'Возвращено')], max_length=100, verbose_name='Type of report')),
            ],
            options={
                'verbose_name': 'Storage report',
                'verbose_name_plural': 'Storage reports',
            },
        ),
        migrations.CreateModel(
            name='TotalBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('book_type', models.CharField(choices=[('ADMISSION_TO_THE_FUND', 'Поступление в фонд'), ('RETIREMENT_FROM_THE_FOUND', 'Выбытие из фонда'), ('RESULTS_OF_THE_FOUND_MOVEMENT', 'Итоги движения фонда')], max_length=100, verbose_name='Book type')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
            ],
            options={
                'verbose_name': 'Total book',
                'verbose_name_plural': 'Total books',
            },
        ),
        migrations.CreateModel(
            name='TypeOfService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('month', models.CharField(choices=[('01', 'Январь'), ('02', 'Февраль'), ('03', 'Март'), ('04', 'Апрель'), ('05', 'Май'), ('06', 'Июнь'), ('07', 'Июль'), ('08', 'Август'), ('09', 'Сентябрь'), ('10', 'Октябрь'), ('11', 'Ноябрь'), ('12', 'Декабрь'), ('ALL_YEAR', 'Весь год')], max_length=100, verbose_name='Month')),
                ('year', models.CharField(choices=[('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], max_length=100, verbose_name='Year')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=100, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'Type of service',
                'verbose_name_plural': 'Types of services',
            },
        ),
        migrations.CreateModel(
            name='UserAccounting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('report_type', models.CharField(choices=[('Registered', 'Количество зарегистрированных читателей'), ('Reregistred', 'Количество перерегистрированных читателей')], max_length=64, verbose_name='Report type')),
                ('year', models.IntegerField(blank=True, choices=[(2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], null=True, verbose_name='Год')),
                ('month', models.IntegerField(blank=True, choices=[(0, 'Весь год'), (1, 'Январь'), (2, 'Февраль'), (3, 'Март'), (4, 'Апрель'), (5, 'Май'), (6, 'Июнь'), (7, 'Июль'), (8, 'Август'), (9, 'Сентябрь'), (10, 'Октябрь'), (11, 'Ноябрь'), (12, 'Декабрь')], null=True, verbose_name='Month')),
                ('day', models.IntegerField(blank=True, null=True, verbose_name='День')),
                ('library', models.CharField(choices=[('Scientific and Technical Library', 'Научно-техническая библиотека'), ('Technical Library of the Minsk Branch', 'Техническая библиотека Минского отделения'), ('Technical Library of the Baranovichi branch', 'Техническая библиотека Барановичского отделения'), ('Technical Library of the Brest branch', 'Техническая библиотека Брестского отделения'), ('Technical Library of the Gomel branch', 'Техническая библиотека Гомельского отделения'), ('Technical Library of the Mogilev branch', 'Техническая библиотека Могилевского отделения'), ('Technical Library of the Vitebsk Branch', 'Техническая библиотека Витебского отделения'), ('Orsha Library Point', 'Библиотечный пункт Орша'), ('Library point Molodechno', 'Библиотечный пункт Молодечно'), ('Luninets Library Point', 'Библиотечный пункт Лунинец'), ('Library point Volkovysk', 'Библиотечный пункт Волковыск'), ('Library point of the Brest Locomotive Depot', 'Библиотечный пункт Локомотивного депо Брест'), ('Zhlobin Library Point', 'Библиотечный пункт Жлобин'), ('Kalinkovichi Library Point', 'Библиотечный пункт Калинковичи'), ('Osipovichi Library Point', 'Библиотечный пункт Осиповичи'), ('Polotsk Library Center', 'Библиотечный пункт Полоцк')], max_length=75, null=True, verbose_name='Library')),
            ],
            options={
                'verbose_name': 'User accounting',
                'verbose_name_plural': 'User accounting',
            },
        ),
        migrations.CreateModel(
            name='BookCirculationReportFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Book circulation report',
                'verbose_name_plural': 'Book circulation report',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kreport.bookcirculationreport',),
        ),
        migrations.CreateModel(
            name='CreateDebtorsReportFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Debtors report',
                'verbose_name_plural': 'Debtors report',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kreport.createdebtorsreport',),
        ),
        migrations.CreateModel(
            name='CreateEducationReportFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Create education report',
                'verbose_name_plural': 'Create education report',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kreport.createeducationreport',),
        ),
        migrations.CreateModel(
            name='UserAccountingFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'User accounting',
                'verbose_name_plural': 'User accounting',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kreport.useraccounting',),
        ),
        migrations.CreateModel(
            name='WorkplaceReportFirstClass',
            fields=[
            ],
            options={
                'verbose_name': 'Create workplace report',
                'verbose_name_plural': 'Create workplace report',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kreport.createworkplacereport',),
        ),
    ]
